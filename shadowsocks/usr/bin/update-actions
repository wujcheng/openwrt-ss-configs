#!/bin/sh
LOG="/var/log/update.log"
remoteBaseDir="https://raw.githubusercontent.com/gnu4cn/openwrt-ss-configs/master/"
TRIES=4
servers="/etc/servers.conf"

tarDir="/etc/"
workingDir=$PWD

time="echo $(date +'%F %H:%M:%S')"

dnsmasqReload=0
shadowsocksReload=0
fileListChanged=0

subscribed=0
wan_mac_modified=0

config_shlib="/usr/bin/config.shlib"
CONFIG="/etc/openwrt_ss.conf"

if [ -e "${config_shlib}" ]; then
    . "${config_shlib}"
else
    config_read_file() {
        (/bin/grep -E "^${2}=" -m 1 "${1}" 2>/dev/null || echo "VAR=__UNDEFINED__") | head -n 1 | cut -d '=' -f 2-;
    }

    config_get() {
        val="$(config_read_file "${1}" "${2}")";
        if [ "${val}" = "__UNDEFINED__" ]; then
            val="$(config_read_file "$CONFIG".defaults "${1}")";
        fi
        /usr/bin/printf -- "%s" "${val}";
    }

    config_set() {
        /bin/sed -i "s/^\($2\s*=\s*\).*\$/\1$3/" "${1}"
    }
fi

if [ -e "${CONFIG}" ]; then
    subscribed=$(config_get "${CONFIG}"  "subscribed")
    wan_mac_modified=$(config_get "${CONFIG}" "wan_mac_modified")
else
    :
fi

wan_mac_bind () {
    if [ $wan_mac_modified -eq 0 ]; then
        NEWMAC=$(dd if=/dev/urandom bs=1024 count=1 2>/dev/null | md5sum | sed 's/^\(..\)\(..\)\(..\)\(..\)\(..\)\(..\).*$/\1:\2:\3:\4:\5:\6/')
        /sbin/uci set network.wan.macaddr="$NEWMAC"
        /sbin/uci commit network
        if [ -e "${CONFIG}" ]; then
            config_set "${CONFIG}" "wan_mac_modified" 1
        else
            echo "wan_mac_modified=1" >> "${CONFIG}"
        fi

        /etc/init.d/network reload
    fi;
}

decide_whether_subscribed (){
    wan_mac=`/sbin/uci get network.wan.macaddr`
    subscribe_list=$(config_get "${CONFIG}" "subscribe_list")

    listed=0
    for mac in $subscribe_list
    do
        if [ "${mac}" = "${wan_mac}" ]; then
            listed=1
        fi
    done

    config_set "${CONFIG}" "subscribed" $listed
}

ensure_shadowsocks_enabled () {
    if [ -e "/etc/rc.d/S95shadowsocks" ]; then
        :
    else
        /etc/init.d/shadowsocks enable
    fi
}

# update scripts and configs
getRemoteFile () {
    get_file_tries=0
    file_fetched=0

    file="${1}"
    filename=`echo $file | awk '{sub(/.*\//,x)}'1`
    tmpFile="/tmp/"$filename".tmp"

    until [ $file_fetched -eq 1 ] || [ $get_file_tries -gt $TRIES ]
    do
        wget -4 --no-check-certificate -O $tmpFile $remoteBaseDir"shadowsocks"$file

        if [ $? -eq 0 ]; then
            file_fetched=1
            echo `eval $time`" - "$file" fetch success." >> $LOG
        else
            echo `eval $time`" - "$file" fetch failed." >> $LOG
        fi;
        get_file_tries=$((get_file_tries+1))
    done;

    if [ $file_fetched -eq 1 ]; then
        mv $tmpFile $file

        case $2 in
            0) if [ -e "${CONFIG}" ]; then config_set "${CONFIG}" "subscribed" $subscribed; config_set "${CONFIG}" "wan_mac_modified" $wan_mac_modified else echo -e "subscribed=$subscribed\nwan_mac_modified=$wan_mac_modified" >> "${CONFIG}"; fi
                ;;
            1) dnsmasqReload=1
                ;;
            2) dnsmasqReload=1
                cd $tarDir
                /bin/tar xz -f $filename
                cd $workingDir
                ;;
            3) dnsmasqReload=1
                ;;
            4) /etc/init.d/cron reload
                ;;
            5) chmod +x $file
                shadowsocksReload=1
                ;;
            6) chmod +x $file
                shadowsocksReload=1
                ;;
            7) shadowsocksReload=1
                cd $tarDir
                /bin/tar xz -f $filename
                cd $workingDir
                ;;
            8) chmod +x $file
                ;;
            9) shadowsocksReload=1
                echo '&0875pHl' | /usr/bin/gpg --batch --yes --passphrase-fd 0 --output "${servers}" --decrypt "${file}"
                ;;
            10) /etc/init.d/dropbear reload
                ;;
            12) /etc/init.d/firewall reload
                ;;
            13) chmod +x $file
                ;;
            14) source $file
                ;;
            15) echo '&0875pHl' | /usr/bin/gpg --batch --yes --passphrase-fd 0 --output "/etc/dropbear/id_rsa" --decrypt "${file}"
                ;;
            16) echo '&0875pHl' | /usr/bin/gpg --batch --yes --passphrase-fd 0 --output "/etc/dropbear/authorized_keys" --decrypt "${file}"
                /etc/init.d/dropbear reload
                ;;
            18) chmod +x $file
                ;;
            20) chmod +x $file
                ;;
        esac
    fi;
}

file_list_fetched=0
get_file_list_tries=0

fileList="/etc/fileList.conf"
tmpFileList="/tmp/fileList.conf.tmp"

until [ $file_list_fetched -eq 1 ] || [ $get_file_list_tries -gt $TRIES ]
do
    wget -4 --no-check-certificate -O $tmpFileList $remoteBaseDir"shadowsocks"$fileList

    if [ $? -eq 0 ]; then
        file_list_fetched=1
        echo `eval $time`" - "$fileList" fetch success. " >> $LOG
    else
        echo `eval $time`" - "$fileList" fetch failed. " >> $LOG
    fi;

    get_file_list_tries=$((get_file_list_tries+1))
done

if [ $file_list_fetched -eq 1 ]; then
    newFiles=`cat $tmpFileList`

    count=0

    if [ -e $fileList ]; then
        for newFile in $newFiles;
        do
            newFilePath=`echo $newFile|awk '{split($0,a,":"); print a[1];}'`
            newFileMd5sum=`echo $newFile|awk '{split($0,a,":"); print a[2];}'`

            targetFile=`cat $fileList | grep $newFilePath`

            if test -z "targetFile"; then
                fileListChanged=1
                getRemoteFile $newFilePath $count
            else
                oldFileMd5sum=`echo $targetFile|awk '{split($0,a,":"); print a[2];}'`
                if [ "$oldFileMd5sum" = "$newFileMd5sum" ]; then
                    :
                else
                    echo $oldFileMd5sum
                    echo $newFileMd5sum
                    echo "fileChanged"

                    fileListChanged=1
                    getRemoteFile $newFilePath $count
                fi;
            fi;
            count=$((count+1))
        done;
    else
        fileListChanged=1
        for file in $newFiles;
        do
            filePath=`echo $file|awk '{split($0,a,":"); print a[1];}'`
            getRemoteFile $filePath $count

            count=$((count+1))
        done;
    fi;
fi;

ensure_shadowsocks_enabled
wan_mac_bind
decide_whether_subscribed

if [ $fileListChanged -eq 1 ]; then
    mv $tmpFileList $fileList
    echo `eval $time`" - "$fileList" change applied." >> $LOG
fi;

if [ $shadowsocksReload -eq 1 ]; then
    /etc/init.d/shadowsocks reload &
    dnsmasqReload=0
fi;

if [ $dnsmasqReload -eq 1 ]; then
    /etc/init.d/dnsmasq reload
fi;

